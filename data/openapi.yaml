openapi: 3.0.3
info:
  title: Swagger Netomox-Containerlab Converter - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:1880
  - url: http://192.168.23.33:1880
paths:
  /layer_iflist/{layer}:
    post:
      tags:
        - Netomox
      summary: generate iflist data from json file(netomox)
      description: "{layer} = 'layer1'or 'layer2'or'layer3' "
      operationId: "layer_iflist"
      parameters:
        - name: layer
          in: path
          description: test
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/layer_iflist'
  /convertif/{ifname}:
    post:
      tags:
        - Netomox
      summary: convert layer3 ifname(for containerlab)
      description: "{ifnanme} = 'eth' "
      operationId: "convertif"
      parameters:
        - name: ifname
          in: path
          description: test
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/convertif'
  /convertif/batfish/{ifname}:
    post:
      tags:
        - Netomox
      summary: convert layer3 ifname(for containerlab) ver batfish
      description: "{ifnanme} = 'eth' version batfish (sw ifname = EthernetX)"
      operationId: "convertif_batfish"
      parameters:
        - name: ifname
          in: path
          description: test
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/convertif_batfish'
  /links/{layer}:
    post:
      tags:
        - Netomox
      summary: generate p2p link data from json file(netomox)
      description: "{layer} = 'layer1'or 'layer2'or'layer3' "
      operationId: "layer_links"
      parameters:
        - name: layer
          in: path
          description: test
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/links'
  /convertlink:
    post:
      tags:
        - Netomox
      summary: generate containerlab links data 
      description: ""
      operationId: "convertlink"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clablinks'
  /convertlink/batfish:
    post:
      tags:
        - Netomox
      summary: generate containerlab links data (for batfish)
      description: ""
      operationId: "convertlink/batfish"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batfishlinks'
  /batfish_l1topo:
    post:
      tags:
        - Netomox
      summary: generate containerlab links data (for batfish)
      description: ""
      operationId: "l1topo"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batfish_l1topo'                
  /convertlink/batfish/parse:
    post:
      tags:
        - Netomox
      summary: generate containerlab links data (for batfish)
      description: ""
      operationId: "convertlink/batfish/parse"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batfishlinks'                
  /description/batfish:
    post:
      tags:
        - Netomox
      summary: generate if description for batfish
      description: ""
      operationId: "description/batfish"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ifdescr_iflist'  
  /ospf_iflist/{area}:
    post:
      tags:
        - Netomox
      summary: generate ospf list
      description: "{area} = 'area0' "
      operationId: "ospf_iflist"
      parameters:
        - name: area
          in: path
          description: test
          required: true
          schema:
            type: string
            example: "area0"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ospf'            
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ospf_list'
  /ospf/convertif/batfish:
    post:
      tags:
        - Netomox
      summary: generate ospf list for batfish
      description: ""
      operationId: "/ospf/convertif/batfish"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ospf'            
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ospf_list_batfish'
  /routetable/{routername}:
    post:
      tags:
        - Netomox
      summary: Convert crpd route table information to clab format
      description: "{routername} = 'rt1' or 'rt2' or ... "
      operationId: "/routetable"
      parameters:
        - name: routername
          in: path
          description: test
          required: true
          schema:
            type: string
            example: "rt1"      
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ospf'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/layer_iflist'
  /ospfneigh/{routername}:
    post:
      tags:
        - Netomox
      summary: Convert crpd ospf neighbor information to clab format
      description: "{routername} = 'rt1' or 'rt2' or ... "
      operationId: "/ospfneigh"
      parameters:
        - name: routername
          in: path
          description: test
          required: true
          schema:
            type: string
            example: "rt1"      
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ospf'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/layer_iflist'  
components:
  schemas:
    Netomox:
      type: object
      properties:
        "ietf-network:networks":
          type: object
          properties:
            network: 
              type: array
              items:
                $ref: '#/components/schemas/network'
    network:
      type: string
      example:
        "network-id": "layer3"
        "node":
          - "node-id": "Seg_10.0.0.0/30"
            "ietf-network-topology:termination-point":
             - "tp-id" :  "rt1_ge-0/0/0.0"
          - "node-id": rt1
            "ietf-network-topology:termination-point":
               - "tp-id" :  "ge-0/0/0.0"
        "ietf-network-topology:link":
          - "source": 
              "source-node": "Seg_10.0.0.0/30"     
              "source-tp": "rt1_ge-0/0/0.0"
            "destination":
              "dest-node": "rt1"     
              "dest-tp": "ge-0/0/0.0"
        
    ospf:
      type: string
      example:
        "ietf-network:networks":
            network: 
            - "network-id": "layer3"
              "node":
                - "node-id": "Seg_10.0.0.0/30"
                  "ietf-network-topology:termination-point":
                   - "tp-id" :  "rt1_ge-0/0/0.0"
                - "node-id": rt1
                  "ietf-network-topology:termination-point":
                   - "tp-id" :  "ge-0/0/0.0"
              "ietf-network-topology:link":
                "source": 
                  "source-node": "Seg_10.0.0.0/30"     
                  "source-tp": "rt1_ge-0/0/0.0"
                "destination":
                  "dest-node": "rt1"     
                  "dest-tp": "ge-0/0/0.0"
            - "network-id": "ospf_area0" 
              "node":
                - "node-id": rt1
                  "ietf-network-topology:termination-point":
                    - "tp-id" :  "ge-0/0/0.0"
                      "mddo-topology:ospf-area-termination-point-attributes": 
                        "network-type": "BROADCAST"
                        "priority": 10
                        "metric": 1
                        "passive": false
                        "timer": 
                          "hello-interval": 10
                          "dead-interval": 40
                          "retransmission-interval": 5
                        "neighbor": 
                          - "router-id": "172.16.0.2"
                            "ip-address": "10.0.0.2/30"               
                  "mddo-topology:ospf-area-node-attributes": 
                    "node-type": "ospf_proc"
                    "router-id": "172.16.0.1"
                    "router-id-source": "static"
                    "log-adjacency-change": false
                    "redistribute": 
                      - "protocol": "connected"
                        "metric-type": 2
                      - "protocol": "static"
                        "metric-type": 2
    "layer_iflist":
      type: array
      items:
        $ref: '#/components/schemas/nodelist'
    "nodelist":
      type: object
      properties:
        "node":
          type: string
          example: "rt1"
        "iflist":
          type: array
          items:
            $ref: '#/components/schemas/iflist'
    "iflist":
      type: string
      example: "ge-0/0/0.0"
    convertif:
      type: array
      items:
        $ref: '#/components/schemas/convertnode'
    convertnode:
      type: object
      properties:
        "node":
          type: object
          properties:
            "original":
              type: string
              example: "Seg_192.168.0.0/24"
            "clab":
              type: string
              example: "Seg-192.168.0.0-24"
        "iflist":
          type: array
          items:
            properties:
              "original":
                type: string
                example: "sw1_Ethernet1"
              "clab":
                type: string
                example: "eth1"
    convertif_batfish:
      type: array
      items:
        $ref: '#/components/schemas/convertnode_batfish'
    convertnode_batfish:
      type: object
      properties:
        "node":
          type: object
          properties:
            "original":
              type: string
              example: "Seg_192.168.0.0/24"
            "clab":
              type: string
              example: "Seg-192.168.0.0-24"
        "iflist":
          type: array
          items:
            properties:
              "original":
                type: string
                example: "sw1_Ethernet1"
              "clab":
                type: string
                example: "Ethernet1"
    links:
      type: string
      example:
        - - "rt1:ge-0/0/0.0"
          - "Seg_10.0.0.0/30:rt1_ge-0/0/0.0"
    clablinks:
      type: string
      example:
        - endpoints:
          - rt1:eth1
          - Seg-10.0.0.0-30:eth1
    batfishlinks:
      type: string
      example:
        - endpoints:
          - rt1:eth1
          - Seg-10.0.0.0-30:Ethernet1
    "ifdescr_iflist":
      type: array
      items:
        $ref: '#/components/schemas/ifdescr'
    ifdescr:
      type: object
      properties:
        "node":
          type: object
          properties:
            "original":
              type: string
              example: "Seg_192.168.0.0/24"
            "clab":
              type: string
              example: "Seg-192.168.0.0-24"
        "iflist":
          type: array
          items:
            properties:
              "original":
                type: string
                example: "rt1_ge-0/0/0.0"
              "clab":
                type: string
                example: "Ethernet1"
              "ifDescr": 
                type: string
                example: "to_rt1_eth1"
    ospf_list:
      type: string
      example:
        - node: rt1
          iflist:
            - "ge-0/0/0.0"
          if_attribute:
          - "network-type": "BROADCAST"
            "priority": 10
            "metric": 1
            "passive": false
            "timer": 
              "hello-interval": 10
              "dead-interval": 40
              "retransmission-interval": 5
            "neighbor": 
              - "router-id": "172.16.0.2"
                "ip-address": "10.0.0.2/30"             
          "attributes": 
            "node-type": "ospf_proc"
            "router-id": "172.16.0.1"
            "router-id-source": "static"
            "log-adjacency-change": false
            "redistribute":
              - "protocol": "connected"
                "metric-type": 2
              - "protocol": "static"
                "metric-type": 2
    batfish_l1topo:
      type: string
      example:
        edges: 
        - node1: 
            hostname: "rt1"
            interfaceName: "eth1"
          node2: 
            hostname: "Seg-10.0.0.0-30"
            interfaceName: "Ethernet1"    
    ospf_list_batfish:
      type: string
      example:
        - node: rt1
          iflist:
            - "eth1"
          "attributes": 
            "node-type": "ospf_proc"
            "router-id": "172.16.0.1"
            "router-id-source": "static"
            "log-adjacency-change": false
            "redistribute":
              - "protocol": "connected"
                "metric-type": 2
              - "protocol": "static"
                "metric-type": 2
