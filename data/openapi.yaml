openapi: 3.0.3
info:
  title: Swagger Netomox-Containerlab Converter - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
  - url: http://node-red:1880
  - url: http://localhost:1880
paths:
  /layer_iflist/{layer}:
    post:
      tags:
        - Netomox
      summary: generate iflist data from json file(netomox)
      description: layerX iflist 
      operationId: "layer_iflist"
      parameters:
        - name: layer
          in: path
          description: 
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netomox'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/layer_iflist'
components:
  schemas:
    Netomox:
      type: object
      properties:
        "ietf-network:networks":
          type: object
          properties:
            network: 
              type: array
              items:
                $ref: '#/components/schemas/network'
    network:
      type: object
      properties:
        "network-id":
          type: string
          example: "layer3"
        "node":
          type: array
          items:
            $ref: '#/components/schemas/node'
    node:
      type: object
      properties:
        "node-id":
          type: string
          example: "rt1"
        "ietf-network-topology:termination-point":
          type: array
          items:
            $ref: '#/components/schemas/tp-id'
    "tp-id":
      type: object
      properties:
        "tp-id":
          type: string
          example: "ge-0/0/0"
    "layer_iflist":
      type: array
      items:
        $ref: '#/components/schemas/nodelist'
    "nodelist":
      type: object
      properties:
        "node":
          type: string
          example: "rt1"
        "iflist":
          type: array
          items:
            $ref: '#/components/schemas/iflist'
    "iflist":
      type: string
      example: "ge-0/0/0"

